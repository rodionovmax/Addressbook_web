###### 6.2 ####################################################
1. Created group generator

###### 6.3 ####################################################
1. Installed jcommander

###### 6.4 ####################################################
1. New way to create data providers
@DataProvider
    public Iterator<Object[]> validGroups() {
        List<Object[]> list = new ArrayList<Object[]>();
        list.add(new Object[] {"test1", "header 1", "footer 1"});
        list.add(new Object[] {"test2", "header 2", "footer 2"});
        list.add(new Object[] {"test3", "header 3", "footer 3"});
        return list.iterator();
    }

2. Using GroupData object
@DataProvider
    public Iterator<Object[]> validGroups() {
        List<Object[]> list = new ArrayList<Object[]>();
        list.add(new Object[] {new GroupData().withName("test1").withHeader("header 1").withFooter("footer 1")});
        list.add(new Object[] {new GroupData().withName("test2").withHeader("header 2").withFooter("footer 2")});
        list.add(new Object[] {new GroupData().withName("test3").withHeader("header 3").withFooter("footer 3")});
        return list.iterator();
    }